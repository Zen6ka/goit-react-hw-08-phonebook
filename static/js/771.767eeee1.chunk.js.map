{"version":3,"file":"static/js/771.767eeee1.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","redux/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx","pages/Pages.styled.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\n  padding: 10px;\n  margin-bottom: 10px;\n  border-radius: 16px;\n  border: none;\n  outline: 0;\n  background-color: #fff;\n  box-shadow: 0 1px 6px 0 #25262946;\n`;\n\nexport const Button = styled.button`\n  padding: 8px 16px;\n  margin-top: 8px;\n  font-size: 18px;\n  border-radius: 24px;\n  border: 1px solid;\n  background-color: #f4f1de;\n  color: #050a38;\n  &:hover {\n    background: #3a3d58;\n    color: #f4f1de;\n  }\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 8px;\n  color: #050a38;\n  font-weight:700;\n`;","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectError = state => state.contacts.error;\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectFilteredContacts = createSelector(\n    [selectContacts, selectFilter],\n    (contacts, filter) => {\n        return contacts.filter(({ name }) => name.toLowerCase().includes(filter.toLowerCase()));\n    }\n);\n","import { useState } from 'react';\nimport { Form, Input, Button, Text } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Notiflix from 'notiflix';\nimport { addContact } from '../../redux/fetchData';\nimport { selectContacts } from '../../redux/selectors';\n\nexport default function ContactForm () {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  \n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    setNumber(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const contact = {\n      name: name,\n      number: number,\n    };\n\n    const isContactExist = contacts.find(\n      ({name}) => name.toLowerCase() === contact.name.toLowerCase()\n    );\n\n    if (isContactExist) {\n      Notiflix.Report.warning(\n        'Alert',\n        `Contact with name ${contact.name} already exists!`,\n        'Ok'\n      );\n      return;\n    }\n\n    const isNumberExist = contacts.find(\n      ({number}) => contact.number.replace(/\\D/g, '') === number.replace(/\\D/g, '')\n    );\n\n    if (isNumberExist) {\n      Notiflix.Report.warning(\n        'Alert',\n        `Number ${contact.number} is already in contacts!`,\n        'Ok'\n      );\n      return;\n    }\n\n    dispatch(addContact(contact));\n    setName('');\n    setNumber('');\n  };\n\n    return (\n      <Form onSubmit={handleSubmit}>\n        <Text>Name</Text>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleNameChange}\n        />\n        <Text>Number</Text>\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleNumberChange}\n        />\n        <Button type=\"submit\">Add Contact</Button>\n      </Form>\n    );\n}","import styled from 'styled-components';\n\nexport const ContactItems = styled.li`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  margin-bottom: 10px;\n  background-color: #f5f6f7;\n  padding-left: 10px;\n  border-radius: 24px;\n`;\n\nexport const Contact = styled.span` \n margin-right: 12px; \n color: #000;\n`;\n\nexport const Btn = styled.button`\n  @media only screen and (max-width: 600px) {\n    margin-right: 10px;\n  }\n  padding: 8px 16px;\n  margin-left: 1px;\n  font-size: 18px;\n  border-radius: 0 24px 24px 0;\n  border: 1px solid;\n  background-color: #f4f1de;\n  color: #000;\n  &:hover {\n    background: #e07a5f;\n    color: #f4f1de;\n    border:none;\n    border: 1px solid #e07a5f;\n  }\n`;\n\nexport const BtnEdit = styled.button`\n  padding: 8px 16px;\n  margin-left: 5px;\n  font-size: 18px;\n  border-radius: 24px 0 0 24px;\n  border: 1px solid;\n  background-color: #f4f1de;\n  color: #000;\n  &:hover {\n    background: #f2cc8f;\n    color: #a1712a;\n    border: 1px solid #f2cc8f;\n  }\n`;\n\nexport const Text = styled.p`\ntext-align: center;\ncolor: #fff;\nmargin-top: 8px;\n  margin-bottom: 16px;  \n`;","import { useDispatch, useSelector} from 'react-redux';\nimport { ContactItems, Contact, Text, BtnEdit, Btn } from './ContactList.styled'\nimport { selectFilteredContacts, selectError, selectIsLoading } from '../../redux/selectors';\nimport { fetchContacts, deleteContact, editContact } from '../../redux/fetchData';\nimport { useEffect, useState } from 'react';\nimport { Loader } from 'components/Loader/Loader';\nimport { Modal, Input, Button, message, Popconfirm } from 'antd';\nimport { CheckOutlined, CloseOutlined, DeleteOutlined, EditOutlined } from '@ant-design/icons';\n\nexport default function ContactList() {\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ul>\n      {isLoading && !error ? (\n        <Loader />\n      ) : filteredContacts.length === 0 && !error ? (\n          <Text>There no matches in phonebook.</Text>\n        ) : (\n          filteredContacts.map(({ id, name, number }) => (\n        <ContactItem key={id} contact={{ id, name, number }}/>\n          ))\n      )}\n    </ul>\n  );\n}\n\nfunction ContactItem({ contact }) {\n  const dispatch = useDispatch();\n  const [showModal, setShowModal] = useState(false);\n  const [newName, setNewName] = useState(contact.name);\n  const [newNumber, setNewNumber] = useState(contact.number);\n\n  const confirm = e => {\n    handleDelete(e.target.value);\n    message.success('Click on Yes');\n  };\n  const cancel = e => {\n    console.log(e);\n    message.error('Click on No');\n  };\n\n  const handleDelete = () => {\n    dispatch(deleteContact(contact.id));\n  };\n\n  const handleEdit = () => {\n    setShowModal(true);\n  };\n\n  const handleSave = () => {\n    setShowModal(false);\n    dispatch(editContact({ id: contact.id, name: newName, number: newNumber }));\n  };\n\n  const handleCancel = () => {\n    setShowModal(false);\n  };\n\n  const handleNameChange = e => {\n    setNewName(e.target.value);\n  };\n\n  const handleNumberChange = e => {\n    setNewNumber(e.target.value);\n  };\n\n  return (\n    <ContactItems>\n      <Contact>{contact.name}</Contact>\n      <Contact href={`tel:${contact.number}`}>\n        {contact.number}\n      </Contact>\n      <BtnEdit onClick={handleEdit}>\n       Edit <EditOutlined />\n      </BtnEdit>\n      <Popconfirm\n        title=\"Delete the contact\"\n        description=\"Are you sure to delete this contact?\"\n        onConfirm={confirm}\n        onCancel={cancel}\n        okText=\"Yes\"\n        cancelText=\"No\"\n      >\n        <Btn>\n          Delete <DeleteOutlined />\n        </Btn>\n      </Popconfirm>\n\n      <Modal\n        open={showModal}\n        onCancel={handleCancel}\n        footer={[\n          <Button key=\"cancel\" onClick={handleCancel}>\n            <CloseOutlined /> Cancel\n          </Button>,\n          <Button key=\"save\" onClick={handleSave}>\n            <CheckOutlined /> Save\n          </Button>,\n        ]}\n      >\n        <div className=\"modal-content\">\n          <label>New Name:</label>\n          <Input\n            type=\"text\"\n            value={newName}\n            onChange={handleNameChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <label>New Number:</label>\n          <Input\n            type=\"text\"\n            value={newNumber}\n            onChange={handleNumberChange}\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n            title=\"Phone number format could be: +1 555 1234567 or 555 1234567.\"\n            required\n          />\n        </div>\n      </Modal>\n    </ContactItems>\n  );\n}","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  padding: 16px;\n  margin-top: 8px;\n  margin-bottom: 8px;\n  border-radius: 24px;\n  border: none;\n  outline: 0;\n  background-color: #fff;\n`;\n\nexport const Title = styled.h3`\n  color: #2e2d2dbc;\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { Input, Title } from './Filter.styled'\nimport { setFilter } from '../../redux/filterSlice';\nimport { selectContacts, selectFilter } from '../../redux/selectors';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  \n  const handleFilterChange = (evt) => {\n    dispatch(setFilter(evt.target.value.trim()));\n  };\n\n  return useSelector(selectContacts).length < 1 ? (\n    <Title>Add your first contact</Title>\n  ) : (\n    <Input\n      type=\"text\"\n      name=\"filter\"\n      placeholder=\"Search by name\"\n      value={filter}\n      onChange={handleFilterChange}\n    />\n  );\n}","import { Helmet, HelmetProvider } from 'react-helmet-async';\n\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\nimport Filter from '../components/Filter/Filter';\nimport { BlurWrap } from './Pages.styled';\n\nexport default function Contacts() {\n  return (\n    <BlurWrap>\n      <HelmetProvider>\n        <Helmet>\n          <title>Phonebook</title>\n        </Helmet>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </HelmetProvider>\n    </BlurWrap>\n  );\n}","import styled from 'styled-components';\nimport { Links } from 'components/AuthNav/AuthNav.styled';\n\nexport const HeroWrapper = styled.div`\nheight: auto;\nwidth: 100%;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nflex-direction: column;\n`;\n\n\nexport const BlurWrap = styled.div`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nflex-direction: column;\nbackground-color: rgba(217, 205, 173, 0.5);\nheight: auto;\nmin-width: 500px;\nmin-height: 270px;\npadding: 8px 8px 0 8px;\nmargin-bottom: 16px;\nmargin-top:450px;\nborder-radius: 16px;\nfont-size:24px;\nfont-weight: 600;\n\n`;\n\nexport const RegBlurWrap = styled.div`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nflex-direction: column;\nbackground-color: rgba(217, 205, 173, 0.5);\nheight: auto;\nmin-width: 500px;\nmin-height: 300px;\npadding: 8px 8px 0 8px;\nmargin-bottom: 16px;\nmargin-top:200px;\nborder-radius: 16px;\nfont-size:24px;\nfont-weight: 600;\n\n`;\n\nexport const ButtonReg = styled.button`\n\tpadding: 10px 20px;\n  margin-top: 5px;\n  font-size: 14px;\n  border-radius: 6px;\n  border: 1px solid;\n\tcolor: #ffffff;\n\tfont-family: \"Gill Sans\", sans-serif;\n\tfont-weight:700;\n\tfont-size:18px;\n\tbackground-color:#9f8c54;\n  &:hover {\n    background-color: #3a3d58;    \n  }\n`\n\nexport const ButtonLog = styled.button`\n\tpadding: 10px 20px;\n  margin-top: 5px;\n  font-size: 14px;\n\tfont-family: \"Gill Sans\", sans-serif;\n  border-radius: 6px;\n  border: 1px solid;\n\tcolor: #ffffff;\n\tfont-weight:700;\n\tfont-size:18px;\n\tbackground-color:#9f8c54;\n  &:hover {\n    background-color: #3a3d58;    \n  }\n`\nexport const TextBlurWrap = styled.h1 `\nfont-family: \"Gill Sans\", sans-serif;\nfont-size:35px;\nfont-weight: 700;\ncolor:#050a38;\ntext-shadow: rgb(165, 193, 224) 1px 2px 3px;\n`\n\nexport const HomeLogin = styled(Links)`\ncolor: #ffffff;\nbackground-color:#9f8c54;\nfont-family: \"Gill Sans\", sans-serif;\nfont-size:22px;\nborder: 1px solid #ffffff;\nmargin-top: 40px;\n  &:hover {\n    background: #3a3d58;\n    color: #f4f1de;\n  }\n`\n"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","Input","_templateObject2","Button","_templateObject3","Text","_templateObject4","selectContacts","state","contacts","items","selectFilter","filter","selectError","error","selectIsLoading","isLoading","selectFilteredContacts","createSelector","_ref","name","toLowerCase","includes","ContactForm","dispatch","useDispatch","useSelector","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","_jsxs","onSubmit","event","preventDefault","contact","find","Notiflix","concat","isNumberExist","_ref2","replace","addContact","children","_jsx","type","pattern","title","required","value","onChange","target","ContactItems","Contact","Btn","BtnEdit","_templateObject5","ContactList","filteredContacts","useEffect","fetchContacts","Loader","length","map","id","ContactItem","showModal","setShowModal","newName","setNewName","_useState5","_useState6","newNumber","setNewNumber","handleDelete","deleteContact","handleCancel","href","onClick","EditOutlined","Popconfirm","description","onConfirm","e","message","onCancel","console","log","okText","cancelText","DeleteOutlined","Modal","open","footer","CloseOutlined","editContact","CheckOutlined","className","Title","Filter","placeholder","evt","setFilter","trim","Contacts","BlurWrap","HelmetProvider","Helmet","RegBlurWrap","ButtonReg","ButtonLog","TextBlurWrap","_templateObject6","HomeLogin","Links","_templateObject7"],"sourceRoot":""}