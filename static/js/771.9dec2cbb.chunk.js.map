{"version":3,"file":"static/js/771.9dec2cbb.chunk.js","mappings":"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","sources":["redux/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx","pages/Pages.styled.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectError = state => state.contacts.error;\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from 'styled-components';\nimport {\n  Form as FormikForm,\n  Field as FormikField,\n  ErrorMessage as FormikError,\n} from 'formik';\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled(FormikField)`\n  padding: 10px;\n  max-width: 600px;\n  width: 100%;\n  border-radius: 16px;\n  border: none;\n  outline: 0;\n  background-color: #fff;\n  box-shadow: 0 1px 6px 0 #25262946;\n`;\n\nexport const Button = styled.button`\n  padding: 8px 16px;\n  margin-top: 8px;\n  font-size: 18px;\n  border-radius: 24px;\n  border: 1px solid;\n  background-color: #f4f1de;\n  color: #050a38;\n  &:hover {\n    background: #3a3d58;\n    color: #f4f1de;\n  }\n`;\n\nexport const Text = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-bottom: 20px;\n  color: #050a38;\n  font-weight: 700;\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  color: #cf4545;\n  font-size: 14px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { selectContacts } from '../../redux/selectors';\nimport { addContact } from '../../redux/fetchData';\n\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport Notiflix from 'notiflix';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { Form, Input, Button, Text, ErrorMessage } from './ContactForm.styled';\n\nconst сontactSchema = Yup.object().shape({\n  name: Yup.string()\n    .trim()\n    .matches(/^[a-zA-Zа-яА-Я'. -]+$/, 'Name may contain only letters.')\n    .required('Required'),\n  number: Yup.string()\n    .trim()\n    .min(7, 'Too Short!')\n    .matches(/^[0-9+ ()-]+$/, 'Please enter a valid phone number.')\n    .required('Required'),\n});\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const onAddContact = (newContact, { resetForm }) => {\n    const isExistName = contacts.some(\n      ({ name }) => name.toLowerCase() === newContact.name.toLowerCase()\n    );\n\n    const isExistPhone = contacts.some(\n      ({ number }) => number === newContact.number\n    );\n\n    if (isExistName) {\n      Notiflix.Report.warning(\n        'Alert',\n        `Contact with name ${newContact.name} already exists!`,\n        'Ok'\n      );\n      return;\n    }\n\n    if (isExistPhone) {\n      Notiflix.Report.warning(\n        'Alert',\n        `Number ${newContact.number} is already in contacts!`,\n        'Ok'\n      );\n      return;\n    }\n\n    dispatch(addContact(newContact));\n    resetForm();\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          name: '',\n          number: '',\n        }}\n        validationSchema={сontactSchema}\n        onSubmit={onAddContact}\n      >\n        <Form autoComplete=\"off\">\n          <Text>\n            Name\n            <Input\n              autoComplete=\"off\"\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              placeholder=\"Jane Doe\"\n              required\n            />\n            <ErrorMessage name=\"name\" component=\"span\" />\n          </Text>\n\n          <Text>\n            Number\n            <Input\n              autoComplete=\"off\"\n              type=\"tel\"\n              id=\"number\"\n              name=\"number\"\n              placeholder=\"111-11-11\"\n              required\n            />\n            <ErrorMessage name=\"number\" component=\"span\" />\n          </Text>\n\n          <Button type=\"submit\">Add Contact</Button>\n        </Form>\n      </Formik>\n      <ToastContainer />\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactItems = styled.li`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  margin-bottom: 10px;\n  background-color: #f5f6f7;\n  padding-left: 10px;\n  border-radius: 24px;\n`;\n\nexport const Contact = styled.span` \n margin-right: 12px; \n color: #000;\n`;\n\nexport const Btn = styled.button`\n  @media only screen and (max-width: 600px) {\n    margin-right: 10px;\n  }\n  padding: 8px 16px;\n  margin-left: 1px;\n  font-size: 18px;\n  border-radius: 0 24px 24px 0;\n  border: 1px solid;\n  background-color: #f4f1de;\n  color: #000;\n  &:hover {\n    background: #e07a5f;\n    color: #f4f1de;\n    border:none;\n    border: 1px solid #e07a5f;\n  }\n`;\n\nexport const BtnEdit = styled.button`\n  padding: 8px 16px;\n  margin-left: 5px;\n  font-size: 18px;\n  border-radius: 24px 0 0 24px;\n  border: 1px solid;\n  background-color: #f4f1de;\n  color: #000;\n  &:hover {\n    background: #f2cc8f;\n    color: #a1712a;\n    border: 1px solid #f2cc8f;\n  }\n`;\n\nexport const Text = styled.p`\ntext-align: center;\ncolor: #fff;\nmargin-top: 8px;\n  margin-bottom: 16px;  \n`;","import { useDispatch, useSelector} from 'react-redux';\nimport { ContactItems, Contact, Text, BtnEdit, Btn } from './ContactList.styled'\nimport { selectFilteredContacts, selectError, selectIsLoading } from '../../redux/selectors';\nimport { fetchContacts, deleteContact, editContact } from '../../redux/fetchData';\nimport { useEffect, useState } from 'react';\nimport { Loader } from 'components/Loader/Loader';\nimport { Modal, Input, Button, message, Popconfirm } from 'antd';\nimport { CheckOutlined, CloseOutlined, DeleteOutlined, EditOutlined } from '@ant-design/icons';\n\nexport default function ContactList() {\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ul>\n      {isLoading && !error ? (\n        <Loader />\n      ) : filteredContacts.length === 0 && !error ? (\n          <Text>There no matches in phonebook.</Text>\n        ) : (\n          filteredContacts.map(({ id, name, number }) => (\n        <ContactItem key={id} contact={{ id, name, number }}/>\n          ))\n      )}\n    </ul>\n  );\n}\n\nfunction ContactItem({ contact }) {\n  const dispatch = useDispatch();\n  const [showModal, setShowModal] = useState(false);\n  const [newName, setNewName] = useState(contact.name);\n  const [newNumber, setNewNumber] = useState(contact.number);\n\n  const confirm = e => {\n    handleDelete(e.target.value);\n    message.success('Click on Yes');\n  };\n  const cancel = e => {\n    console.log(e);\n    message.error('Click on No');\n  };\n\n  const handleDelete = () => {\n    dispatch(deleteContact(contact.id));\n  };\n\n  const handleEdit = () => {\n    setShowModal(true);\n  };\n\n  const handleSave = () => {\n    setShowModal(false);\n    dispatch(editContact({ id: contact.id, name: newName, number: newNumber }));\n  };\n\n  const handleCancel = () => {\n    setShowModal(false);\n  };\n\n  const handleNameChange = e => {\n    setNewName(e.target.value);\n  };\n\n  const handleNumberChange = e => {\n    setNewNumber(e.target.value);\n  };\n\n  return (\n    <ContactItems>\n      <Contact>{contact.name}</Contact>\n      <Contact href={`tel:${contact.number}`}>\n        {contact.number}\n      </Contact>\n      <BtnEdit onClick={handleEdit}>\n       Edit <EditOutlined />\n      </BtnEdit>\n      <Popconfirm\n        title=\"Delete the contact\"\n        description=\"Are you sure to delete this contact?\"\n        onConfirm={confirm}\n        onCancel={cancel}\n        okText=\"Yes\"\n        cancelText=\"No\"\n      >\n        <Btn>\n          Delete <DeleteOutlined />\n        </Btn>\n      </Popconfirm>\n\n      <Modal\n        open={showModal}\n        onCancel={handleCancel}\n        footer={[\n          <Button key=\"cancel\" onClick={handleCancel}>\n            <CloseOutlined /> Cancel\n          </Button>,\n          <Button key=\"save\" onClick={handleSave}>\n            <CheckOutlined /> Save\n          </Button>,\n        ]}\n      >\n        <div className=\"modal-content\">\n          <label>New Name:</label>\n          <Input\n            type=\"text\"\n            value={newName}\n            onChange={handleNameChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <label>New Number:</label>\n          <Input\n            type=\"text\"\n            value={newNumber}\n            onChange={handleNumberChange}\n            // pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n            pattern=\" /^[a-zA-Z0-9]+$/\"\n\t\t\t\t\t\ttitle=\"Phone number format could be: +1 555 1234567 or 555 1234567.\"\n            required\n          />\n        </div>\n      </Modal>\n    </ContactItems>\n  );\n}","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  padding: 16px;\n  margin-top: 8px;\n  margin-bottom: 8px;\n  border-radius: 24px;\n  border: none;\n  outline: 0;\n  background-color: #fff;\n`;\n\nexport const Title = styled.h3`\n  color: #2e2d2dbc;\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { Input, Title } from './Filter.styled'\nimport { setFilter } from '../../redux/filterSlice';\nimport { selectContacts, selectFilter } from '../../redux/selectors';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  \n  const handleFilterChange = (evt) => {\n    dispatch(setFilter(evt.target.value.trim()));\n  };\n\n  return useSelector(selectContacts).length < 1 ? (\n    <Title>Add your first contact</Title>\n  ) : (\n    <Input\n      type=\"text\"\n      name=\"filter\"\n      placeholder=\"Search by name\"\n      value={filter}\n      onChange={handleFilterChange}\n    />\n  );\n}","import { Helmet, HelmetProvider } from 'react-helmet-async';\n\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\nimport Filter from '../components/Filter/Filter';\nimport { BlurWrap } from './Pages.styled';\n\nexport default function Contacts() {\n  return (\n    <BlurWrap>\n      <HelmetProvider>\n        <Helmet>\n          <title>Phonebook</title>\n        </Helmet>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </HelmetProvider>\n    </BlurWrap>\n  );\n}\n","import styled from 'styled-components';\nimport { Links } from 'components/AuthNav/AuthNav.styled';\n\nexport const HeroWrapper = styled.div`\nheight: auto;\nwidth: 100%;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nflex-direction: column;\n`;\n\n\nexport const BlurWrap = styled.div`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nflex-direction: column;\nbackground-color: rgba(217, 205, 173, 0.5);\nheight: auto;\nmin-width: 500px;\nmin-height: 270px;\npadding: 8px 8px 0 8px;\nmargin-bottom: 16px;\nmargin-top:450px;\nborder-radius: 16px;\nfont-size:24px;\nfont-weight: 600;\n\n`;\n\nexport const RegBlurWrap = styled.div`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nflex-direction: column;\nbackground-color: rgba(217, 205, 173, 0.5);\nheight: auto;\nmin-width: 500px;\nmin-height: 300px;\npadding: 8px 8px 0 8px;\nmargin-bottom: 16px;\nmargin-top:200px;\nborder-radius: 16px;\nfont-size:24px;\nfont-weight: 600;\n\n`;\n\nexport const ButtonReg = styled.button`\n\tpadding: 10px 20px;\n  margin-top: 5px;\n  font-size: 14px;\n  border-radius: 6px;\n  border: 1px solid;\n\tcolor: #ffffff;\n\tfont-family: \"Gill Sans\", sans-serif;\n\tfont-weight:700;\n\tfont-size:18px;\n\tbackground-color:#9f8c54;\n  &:hover {\n    background-color: #3a3d58;    \n  }\n`\n\nexport const ButtonLog = styled.button`\n\tpadding: 10px 20px;\n  margin-top: 5px;\n  font-size: 14px;\n\tfont-family: \"Gill Sans\", sans-serif;\n  border-radius: 6px;\n  border: 1px solid;\n\tcolor: #ffffff;\n\tfont-weight:700;\n\tfont-size:18px;\n\tbackground-color:#9f8c54;\n  &:hover {\n    background-color: #3a3d58;    \n  }\n`\nexport const TextBlurWrap = styled.h1 `\nfont-family: \"Gill Sans\", sans-serif;\nfont-size:35px;\nfont-weight: 700;\ncolor:#050a38;\ntext-shadow: rgb(165, 193, 224) 1px 2px 3px;\n`\n\nexport const HomeLogin = styled(Links)`\ncolor: #ffffff;\nbackground-color:#9f8c54;\nfont-family: \"Gill Sans\", sans-serif;\nfont-size:22px;\nborder: 1px solid #ffffff;\nmargin-top: 40px;\n  &:hover {\n    background: #3a3d58;\n    color: #f4f1de;\n  }\n`\n"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectError","error","selectIsLoading","isLoading","selectFilteredContacts","createSelector","_ref","name","toLowerCase","includes","Form","styled","FormikForm","_templateObject","_taggedTemplateLiteral","Input","FormikField","_templateObject2","Button","_templateObject3","Text","_templateObject4","ErrorMessage","FormikError","_templateObject5","сontactSchema","Yup","shape","trim","matches","required","number","min","ContactForm","useSelector","dispatch","useDispatch","_jsxs","_Fragment","children","_jsx","Formik","initialValues","validationSchema","onSubmit","newContact","resetForm","isExistName","some","_ref2","isExistPhone","_ref3","Notiflix","concat","addContact","autoComplete","type","id","placeholder","component","ToastContainer","ContactItems","Contact","Btn","BtnEdit","ContactList","filteredContacts","useEffect","fetchContacts","Loader","length","map","ContactItem","contact","_useState","useState","_useState2","_slicedToArray","showModal","setShowModal","_useState3","_useState4","newName","setNewName","_useState5","_useState6","newNumber","setNewNumber","handleDelete","deleteContact","handleCancel","href","onClick","EditOutlined","Popconfirm","title","description","onConfirm","e","target","value","message","onCancel","console","log","okText","cancelText","DeleteOutlined","Modal","open","footer","CloseOutlined","editContact","CheckOutlined","className","onChange","pattern","Title","Filter","evt","setFilter","Contacts","BlurWrap","HelmetProvider","Helmet","RegBlurWrap","ButtonReg","ButtonLog","TextBlurWrap","_templateObject6","HomeLogin","Links","_templateObject7"],"sourceRoot":""}