{"version":3,"file":"static/js/236.e98956fd.chunk.js","mappings":"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","sources":["pages/Pages.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Links } from 'components/AuthNav/AuthNav.styled';\n\nexport const HeroWrapper = styled.div`\nheight: auto;\nwidth: 100%;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nflex-direction: column;\n`;\n\n\nexport const BlurWrap = styled.div`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nflex-direction: column;\nbackground-color: rgba(217, 205, 173, 0.5);\nheight: auto;\nmin-width: 500px;\nmin-height: 270px;\npadding: 8px 8px 0 8px;\nmargin-bottom: 16px;\nmargin-top:450px;\nborder-radius: 16px;\nfont-size:24px;\nfont-weight: 600;\n\n`;\n\nexport const RegBlurWrap = styled.div`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nflex-direction: column;\nbackground-color: rgba(217, 205, 173, 0.5);\nheight: auto;\nmin-width: 500px;\nmin-height: 300px;\npadding: 8px 8px 0 8px;\nmargin-bottom: 16px;\nmargin-top:200px;\nborder-radius: 16px;\nfont-size:24px;\nfont-weight: 600;\n\n`;\n\nexport const ButtonReg = styled.button`\n\tpadding: 10px 20px;\n  margin-top: 5px;\n  font-size: 14px;\n  border-radius: 6px;\n  border: 1px solid;\n\tcolor: #ffffff;\n\tfont-family: \"Gill Sans\", sans-serif;\n\tfont-weight:700;\n\tfont-size:18px;\n\tbackground-color:#9f8c54;\n  &:hover {\n    background-color: #3a3d58;    \n  }\n`\n\nexport const ButtonLog = styled.button`\n\tpadding: 10px 20px;\n  margin-top: 5px;\n  font-size: 14px;\n\tfont-family: \"Gill Sans\", sans-serif;\n  border-radius: 6px;\n  border: 1px solid;\n\tcolor: #ffffff;\n\tfont-weight:700;\n\tfont-size:18px;\n\tbackground-color:#9f8c54;\n  &:hover {\n    background-color: #3a3d58;    \n  }\n`\nexport const TextBlurWrap = styled.h1 `\nfont-family: \"Gill Sans\", sans-serif;\nfont-size:35px;\nfont-weight: 700;\ncolor:#050a38;\ntext-shadow: rgb(165, 193, 224) 1px 2px 3px;\n`\n\nexport const HomeLogin = styled(Links)`\ncolor: #ffffff;\nbackground-color:#9f8c54;\nfont-family: \"Gill Sans\", sans-serif;\nfont-size:22px;\nborder: 1px solid #ffffff;\nmargin-top: 40px;\n  &:hover {\n    background: #3a3d58;\n    color: #f4f1de;\n  }\n`\n","import { useDispatch, useSelector } from 'react-redux';\nimport { register } from '../../redux/auth/auth-fetch';\nimport { Form, Input } from 'antd';\nimport{ButtonReg} from '../../pages/Pages.styled'\nimport { RegBlurWrap } from '../../pages/Pages.styled';\n\nexport default function RegisterForm () {\n  const [form] = Form.useForm();\n  const dispatch = useDispatch();\n  const { isLoading, error } = useSelector(state => state.auth);\n\n  // const onFinish = values => {\n  //   const { name, email, password, confirm } = values;\n\n  //   if (password === confirm) {\n  //     dispatch(register({ name, email, password }));\n  //     !isLoading && !error && form.resetFields();\n  //   }\n  // };\n\n\tconst onFinish = async values => {\n    const { name, email, password, confirm } = values;\n\n    if (password === confirm) {\n      await dispatch(register({ name, email, password }));\n      if (!isLoading && error && error.status === 400) {\n        alert('Error while registering user');\n      } else {\n        form.resetFields();\n      }\n    }\n  };\n\n  const formItemLayout = {\n    labelCol: {\n      span: 24,\n    },\n    wrapperCol: {\n      span: 24,\n    },\n  };\n\n  const tailFormItemLayout = {\n    wrapperCol: {\n      xs: {\n        span: 24,\n        offset: 0,\n      },\n      sm: {\n        span: 16,\n        offset: 4,\n      },\n    },\n  };\n\t\n  return (\n    <RegBlurWrap>\n    <Form\n      {...formItemLayout}\n      form={form}\n      name=\"register\"\n      onFinish={onFinish}\n      size={'default'}\n      initialValues={{\n        residence: ['zhejiang', 'hangzhou', 'xihu'],\n        prefix: '86',\n      }}\n      style={{\n        width: 300,\n      }}\n      scrollToFirstError\n    >\n      <Form.Item\n        name=\"email\"\n        label=\"E-mail\"\n        rules={[\n          {\n            type: 'email',\n            message: 'The input is not valid E-mail!',\n          },\n          {\n            required: true,\n            message: 'Please input your E-mail!',\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        name=\"password\"\n        label=\"Password\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your password!',\n          },\n        ]}\n        hasFeedback\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item\n        name=\"confirm\"\n        label=\"Confirm Password\"\n        dependencies={['password']}\n        hasFeedback\n        rules={[\n          {\n            required: true,\n            message: 'Please confirm your password!',\n          },\n          ({ getFieldValue }) => ({\n            validator(_, value) {\n              if (!value || getFieldValue('password') === value) {\n                return Promise.resolve();\n              }\n              return Promise.reject(\n                new Error('The new password that you entered do not match!')\n              );\n            },\n          }),\n        ]}\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item\n        name=\"name\"\n        label=\"Name\"\n        tooltip=\"How would you like to be called?\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your name!',\n            whitespace: true,\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item {...tailFormItemLayout}>\n        <ButtonReg type=\"primary\" shape=\"round\" htmlType=\"submit\">\n          Register\n        </ButtonReg>\n      </Form.Item>\n      </Form>\n      </RegBlurWrap>\n  );\n};\n","import { Helmet, HelmetProvider } from 'react-helmet-async';\n\nimport RegisterForm from '../components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <HelmetProvider>\n      <div>\n        <Helmet>\n          <title>Registration</title>\n        </Helmet>\n        <RegisterForm />\n      </div>\n    </HelmetProvider>\n  );\n}"],"names":["BlurWrap","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","RegBlurWrap","_templateObject3","ButtonReg","_templateObject4","ButtonLog","_templateObject5","TextBlurWrap","_templateObject6","HomeLogin","Links","_templateObject7","RegisterForm","_Form$useForm","Form","form","_slicedToArray","dispatch","useDispatch","_useSelector","useSelector","state","auth","isLoading","error","onFinish","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","values","name","email","password","confirm","_context","prev","next","register","status","alert","resetFields","stop","_x","apply","arguments","_jsx","children","_jsxs","_objectSpread","labelCol","span","wrapperCol","size","initialValues","residence","prefix","style","width","scrollToFirstError","label","rules","type","message","required","Input","hasFeedback","dependencies","_ref2","getFieldValue","validator","_","value","Promise","reject","Error","resolve","tooltip","whitespace","xs","offset","sm","shape","htmlType","Register","HelmetProvider","Helmet"],"sourceRoot":""}